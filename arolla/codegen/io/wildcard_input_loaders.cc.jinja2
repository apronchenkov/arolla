{# jinja2 file itself is NOT auto generated. -#}
// THIS FILE IS AUTOGENERATED. DO NOT EDIT.
// Build target: {{ build_target }}

{% for hdr in hdrs %}
{{ hdr.include_str }}
{%- endfor %}{# hdr #}
#include "arolla/io/input_loader.h"
#include "arolla/io/wildcard_input_loader.h"
#include "arolla/qtype/base_types.h"

namespace {

using ::arolla::WildcardInputLoader;
using ::arolla::InputLoaderPtr;

using Input = {{ input_cls.full_name }};

{% for _, accessor in accessors -%}
constexpr auto accessor_lambda_{{ loop.index0 }} = {{ accessor.lambda_str }};
using AccessorResultType_{{ loop.index0 }} =
    ::arolla::WildcardAccessorResultType<
        decltype(accessor_lambda_{{ loop.index0 }}), Input, std::string>;
{% endfor -%}{#- accessors #}
}  // namespace

{% for accessor_name, _ in accessors %}
    {%- set accessor_id = loop.index0 -%}
    {%- set loader_name = loader_names[accessor_id] -%}
{{ loader_name.open_namespace_str }}

absl::StatusOr<InputLoaderPtr<Input>> {{ loader_name.name }}() {
  return WildcardInputLoader<Input>::Build(
      accessor_lambda_{{ accessor_id }},
      absl::ParsedFormat<'s'>(R"accessor____name({{ accessor_name }})accessor____name"));
}

{{ loader_name.close_namespace_str }}
{% endfor -%}{#- accessor_name #}
{# keep a newline #}
