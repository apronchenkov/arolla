{# jinja2 file itself is NOT auto generated. -#}
// THIS FILE IS AUTOGENERATED. DO NOT EDIT.
// Build target: {{ build_target }}_lib

{% from 'input_loader_operators_util.jinja2' import operator_functor_name -%}

#include <memory>
{% for hdr in hdrs %}
{{ hdr.include_str }}
{%- endfor %}{# hdr #}
#include "arolla/codegen/qtype_utils.h"
#include "arolla/io/accessors_input_loader.h"
#include "arolla/io/input_loader.h"
#include "arolla/io/proto_types/types.h"
#include "arolla/qtype/base_types.h"

{% macro operator_functors_definition(loader_name, spec) -%}
{%   for collection in spec.accessors_collections -%}
{%     set shard_id = loop.index0 -%}
{%     for name, accessor in collection.accessors_list.named_accessors -%}
{%       set input_id = loop.index0 -%}
struct {{operator_functor_name(loader_name, shard_id, input_id, name)}} {
  auto operator()(const {{ spec.input_cls.full_name }}& input) const {
    static constexpr auto accessor_lambda = {{ accessor.lambda_str }};
    using AccessorResultType = ::arolla::InputLoaderAccessorResultType<
        decltype(accessor_lambda), {{ spec.input_cls.full_name }}>;
    AccessorResultType result;
    ::arolla::InvokeInputLoaderAccessor(
        accessor_lambda, input, arolla::GetHeapBufferFactory(), &result);
    return result;
  }
};
{%     endfor -%}
{%   endfor -%}
{% endmacro -%}

{% for loader_name, spec in loaders_spec %}
{{ loader_name.open_namespace_str }}

{{ operator_functors_definition(loader_name, spec) }}
{{ loader_name.close_namespace_str }}
{% endfor -%}

